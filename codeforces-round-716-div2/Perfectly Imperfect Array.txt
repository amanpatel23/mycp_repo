import java.io.*;
import java.util.StringTokenizer;

public class PerfectlyImpArr {

    public static void main(String[] args) {

        FastScanner fs = new FastScanner();

        int t;
        t = fs.nextInt();

        while (t-- > 0) {
            int n;
            n = fs.nextInt();

            int[] nums;
            nums = fs.readArray(n);

            boolean flag = false;
            for (int i = 0; i < n; i++) {
                //System.out.println(nums[i]);
                if (_check(nums[i])) {
                    flag = true;
                    break;
                }
            }

            out.println(flag ? "YES" : "NO");

        }

        out.close();
    }

    static boolean _check(int x) {
        return (Math.ceil(Math.pow(x, 1 / (2 * 1.))) != Math.floor(Math.pow(x, 1 / (2 * 1.))));
    }

    public static PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out));

    static class FastScanner {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer("");

        public String next() {
            while (!st.hasMoreElements())
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }

        int[] readArray(int n) {
            int[] a = new int[n];
            for (int i = 0; i < n; i++) a[i] = nextInt();
            return a;
        }

        int nextInt() {
            return Integer.parseInt(next());
        }
    }
}
